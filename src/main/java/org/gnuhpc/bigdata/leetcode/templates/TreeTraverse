1. 前序和后续模板
List<Integer> res = new ArrayList<>();
Deque<TreeNode> stack = new LinkedList<>();
TreeNode p = root;

while (p != null || !stack.isEmpty()) {
    while (p != null) {
        //在这儿访问是前序, 在这儿addFirst倒着保存访问结果是后续
        stack.push(p);
        p = p.left;
    }
    p = stack.pop();
    //在这儿访问是中序
    p = p.right;
}
return res;

2. 层次遍历为标准BFS

3. 前序遍历还有一种先压右边再压左边的做法,在修改二叉树结构的时候非常有用, 不会导致丢失

LC相关题目:

