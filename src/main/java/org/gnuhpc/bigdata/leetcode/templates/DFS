DFS模式：
(memo不是必须的,可以作为后续优化使用)
一、 递归模式
1. 设定开始点，一般从头部或者尾部进行，并设定memo作为记忆化搜索的存储，最后确认返回值（int、boolean还是void）
2. 将开始点和memo，进入DFS
    2.1 首先判断边界条件
    2.2 判断是否已经算过，如果已经算过则直接返回
    2.3 进行下一步可能性的遍历，遍历中判断是不是一步可行的操作（isValid），如果可行则进入该步DFS,
        注意存在型的DFS， 遍历中有一个是true即为true。
    2.4 尝试所有遍历后将结果放入memo，并返回

二、非递归模式
1. 使用stack, 在某些使用维护visited
2. 对每个节点进行遍历，如果没有visit就放入stack
3. 然后进入while循环，条件为!stack.isEmpty() ，弹出一个后，标注visited，然后对相邻节点进行遍历
   push(注意判断visited)回stack。
LC相关题目：
62
63
679
323
140
139
547
286

1.判断连通性（染色法）
设置visited、随后遍历每个节点 （如果是多种颜色可以是0为未访问，1为一个颜色，-1为一个颜色）
如果不在visited里，进入dfs， dfs之后可以进行计数代表连通区域的个数
dfs中放入visited，对其相邻节点进行递归标注,注意要判断visited、满足染色条件
LC相关题目：
547
323
785

2. 对称二维数组可以将visited作为一维数组进行
LC相关题目
547
323

3. 记忆化搜索的设置memo可以是二维数组，另外要根据idx来调整数组大小
LC相关题目
300 Method2

4. 记忆化搜索根据不同的条件可以设置多个memo
LC相关题目
337 解法2

5. 有些题目从结果倒着推也很快，可以对memo设置为包装类型
LC相关题目
63 解法2


