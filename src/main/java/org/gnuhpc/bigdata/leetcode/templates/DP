动态规划

动态规划的核心设计思想是数学归纳法。
我们可以假设 dp[0...i−1] 都已经被算出来了，然后问自己：怎么通过这些结果算出dp[i] ?

通常DP的题目都可以先用DFS做，然后加memo优化，最后转化为DP

前边两个在DFS一节中有所总结，此处主要总结如何转化为DP，

动态规划的设计流程：
首先明确 dp 数组所存数据的含义。这步很重要，如果不得当或者不够清晰，会阻碍之后的步骤。
然后根据 dp 数组的定义，运用数学归纳法的思想，假设 dp[0...i−1] 都已知，
想办法求出 dp[i]，一旦这一步完成，整个题目基本就解决了。
但如果无法完成这一步，很可能就是 dp 数组的定义不够恰当，需要重新定义 dp 数组的含义；
或者可能是 dp 数组存储的信息还不够，不足以推出下一步的答案，需要把 dp 数组扩大成二维数组甚至三维数组。

区间型DP
一般设置int[][] dp = new int[m+1][n+1]; dp表示题目的要求，然后根据初始条件和题意进行递推。
LC相关题目
72 解法3